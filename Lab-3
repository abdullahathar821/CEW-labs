//Question 1
#include <stdio.h>

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int main() {
    int num1, num2;

    printf("Enter the first number: ");
    scanf("%d", &num1);

    printf("Enter the second number: ");
    scanf("%d", &num2);

    printf("Before swapping: num1 = %d, num2 = %d\n", num1, num2);

    swap(&num1, &num2);

    printf("After swapping: num1 = %d, num2 = %d\n", num1, num2);

    return 0;
}

//Question 2
#include <stdio.h>

void printReverse(const char* str) {
    const char* end = str;
    while (*end != '\0') {
        end++;
    }
    end--;

    printf("Reversed String: ");
    while (end >= str) {
        printf("%c", *end);
        end--;
    }
    printf("\n");
}

int main() {
    char str[100];

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    printReverse(str);

    return 0;
}

//Question 3
#include <stdio.h>

void inputArray(int* arr, int size) {
    printf("Enter the elements of the array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", arr + i);
    }
}

void printArray(const int* arr, int size) {
    printf("Array elements: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", *(arr + i));
    }
    printf("\n");
}

int main() {
    int size;

    printf("Enter the size of the array: ");
    scanf("%d", &size);

    int arr[size];

    inputArray(arr, size);
    printArray(arr, size);

    return 0;
}

//Question 4
#include <stdio.h>

int searchElement(const int* arr, int size, int key) {
    for (int i = 0; i < size; i++) {
        if (*(arr + i) == key) {
            return i; // Element found, return the index
        }
    }
    return -1; // Element not found
}

int main() {
    int size, key;

    printf("Enter the size of the array: ");
    scanf("%d", &size);

    int arr[size];

    printf("Enter the elements of the array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", arr + i);
    }

    printf("Enter the element to search: ");
    scanf("%d", &key);

    int result = searchElement(arr, size, key);

    if (result != -1) {
        printf("Element %d found at index %d\n", key, result);
    } else {
        printf("Element %d not found in the array\n", key);
    }

    return 0;
}



//Question 5
#include <stdio.h>

void addMatrices(const int* mat1, const int* mat2, int* result, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            *((result + i * cols) + j) = *((mat1 + i * cols) + j) + *((mat2 + i * cols) + j);
        }
    }
}

void displayMatrix(const int* mat, int rows, int cols) {
    printf("Matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", *((mat + i * cols) + j));
        }
        printf("\n");
    }
}

int main() {
    int rows, cols;

    printf("Enter the number of rows in the matrices: ");
    scanf("%d", &rows);

    printf("Enter the number of columns in the matrices: ");
    scanf("%d", &cols);

    int mat1[rows][cols], mat2[rows][cols], result[rows][cols];

    printf("Enter the elements of the first matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat1[i][j]);
        }
    }

    printf("Enter the elements of the second matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat2[i][j]);
        }
    }

    addMatrices(&mat1[0][0], &mat2[0][0], &result[0][0], rows, cols);

    printf("Resultant Matrix after addition:\n");
    displayMatrix(&result[0][0], rows, cols);

    return 0;
}

